# This file is auto-generated from the global schema definitions.
# To override a column definition, add the 'override' tag to that column.

version: 2

column_definitions:
  burned_fee_allocation: &burned_fee_allocation
    name: burned_fee_allocation
    description: "The USD value of tokens burned"
    tags:
      - artemis_gaap

  fees: &fees
    name: fees
    description: "The total fees generated by a protocol"

  revenue: &revenue
    name: revenue
    description: "The total revenue generated by a protocol"
    tags:
      - artemis_gaap

  service_fee_allocation: &service_fee_allocation
    name: service_fee_allocation
    description: "About ~68% of gross protocol revenue is distributed to LPs of PancakeSwap."
    tags:
      - artemis_gaap
      - override

  spot_dau: &spot_dau
    name: spot_dau
    description: "The number of daily active traders on PancakeSwap"
    tags:
      - override

  spot_fees: &spot_fees
    name: spot_fees
    description: "The total amount of fees (in USD) on a spot dex"

  spot_volume: &spot_volume
    name: spot_volume
    description: "The total volume on PancakeSwap"
    tags:
      - override

  token_incentives: &token_incentives
    name: token_incentives
    description: "The total token incentives paid by a protocol in its native token"
    tags:
      - artemis_gaap

  treasury_fee_allocation: &treasury_fee_allocation
    name: treasury_fee_allocation
    description: "Revenue allocated to the protocol's treasury for future use, including development, growth, or governance."
    tags:
      - artemis_gaap

  tvl: &tvl
    name: tvl
    description: "The total value locked in a protocol"

models:
  - name: ez_pancakeswap_metrics_by_pool
    description: "This table stores metrics for the PANCAKESWAP protocol"
    columns:
      - *burned_fee_allocation
      - *fees
      - *revenue
      - *service_fee_allocation
      - *spot_dau
      - *spot_fees
      - *spot_volume
      - *treasury_fee_allocation
      - *tvl

    tests:
      - not_null:
          column_name: date
          description: "Ensures that the date column is not null"
          severity: error
      - dbt_utils.recency:
          datepart: day
          interval: 2
          field: date
          description: "Ensures that the date column contains at least one record from the last 2 days"
          severity: error
      - dbt_utils.expression_is_true:
          expression: date = cast(date as date)
          description: "Ensures that the date column is properly typed as DATE with yyyy-mm-dd format"
          severity: error
  - name: ez_pancakeswap_metrics_by_chain
    description: "This table stores metrics for the PANCAKESWAP protocol"
    columns:
      - *burned_fee_allocation
      - *fees
      - *revenue
      - *service_fee_allocation
      - *spot_dau
      - *spot_fees
      - *spot_volume
      - *token_incentives
      - *treasury_fee_allocation
      - *tvl

    tests:
      - not_null:
          column_name: date
          description: "Ensures that the date column is not null"
          severity: error
      - dbt_utils.recency:
          datepart: day
          interval: 2
          field: date
          description: "Ensures that the date column contains at least one record from the last 2 days"
          severity: error
      - dbt_utils.expression_is_true:
          expression: date = cast(date as date)
          description: "Ensures that the date column is properly typed as DATE with yyyy-mm-dd format"
          severity: error
      - not_null:
          column_name: chain
          description: "Ensures that the chain column is not null for by_chain tables"
          severity: error
  - name: ez_pancakeswap_metrics
    description: "This table stores metrics for the PANCAKESWAP protocol"
    columns:
      - *burned_fee_allocation
      - *fees
      - *revenue
      - *service_fee_allocation
      - *spot_dau
      - *spot_fees
      - *spot_volume
      - *token_incentives
      - *treasury_fee_allocation
      - *tvl

    tests:
      - not_null:
          column_name: date
          description: "Ensures that the date column is not null"
          severity: error
      - dbt_utils.recency:
          datepart: day
          interval: 2
          field: date
          description: "Ensures that the date column contains at least one record from the last 2 days"
          severity: error
      - dbt_utils.expression_is_true:
          expression: date = cast(date as date)
          description: "Ensures that the date column is properly typed as DATE with yyyy-mm-dd format"
          severity: error
